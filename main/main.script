local id = 0
local restart

function init(self)
	msg.post("@render:", "use_fixed_projection", { zoom = 2 })
	msg.post(".", "acquire_input_focus")
	msg.post("/timer", "create_timer", { timer_id = hash('spawn'), duration = 3, started = true })
	sound.play("#music", { gain = 1.0, pan = 0 })

	self.bad_ids = {}
	self.score = 0
	self.strikes = 0
	self.game_over = false
	self.player_id = hash("/player/root")
end

function update(self, dt)
	
end

function on_message(self, message_id, message, sender)
	print(message_id)
	if message_id == hash("timeout") then
		if message.timer_id == hash('spawn') and not self.game_over then
			local props = {}
			props[hash(string.format("/bad", id))] = { direction = math.pow(-1, math.random(1, 2)) }
			id = id + 1
			object = collectionfactory.create("#bad_factory", nil, nil, props)[hash("/bad")]
			table.insert(self.bad_ids, object)
			msg.post("/timer", hash("set_duration"), { timer_id = hash('spawn'), duration = math.random() * 1.5 + 5/60 })
		end
	elseif message_id == hash("hit") then
		self.strikes = self.strikes + 1
		msg.post("/gui", "update_strikes", { strikes = self.strikes })
		if self.strikes > 3 and not self.game_over then
			msg.post("/gui", "game_over")
			go.delete(self.player_id, true)
			self.game_over = true
			
			
			msg.post("/timer", "stop", { timer_id = hash('spawn') })
		end
	elseif message_id == hash("player_moving") then
		self.score = self.score + 1
		msg.post("/gui", "update_score", { score = self.score })
	end
end

function on_input(self, action_id, action)
	
	if action_id == hash("restart") and self.game_over and action.pressed then
		restart(self)
	end
end

function restart(self)
	for _, id in pairs(self.bad_ids) do
		pcall(go.delete, id)
	end
	self.bad_ids = {}
	self.score = 0
	self.strikes = 0
	self.game_over = false
	
	msg.post("/gui", "restart")
	msg.post("/timer", "create_timer", { timer_id = hash('spawn'), duration = 3, started = true })
	self.player_id = collectionfactory.create("#player_factory")[hash('/root')]
end

